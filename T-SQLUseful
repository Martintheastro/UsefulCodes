WITH MaxDates AS (
    SELECT 'Table1' AS TableName, MAX(HLoadTS) AS MaxDate FROM [dbo].[Table1]
    UNION ALL
    SELECT 'Table2'AS TableName, MAX(HLoadTS) AS MaxDate FROM [dbo].[Table2]
   ....

)
SELECT TableName, CONVERT(VARCHAR(10), MaxDate, 23) AS MaxDate,
CASE
    WHEN MaxDate > DATEADD(DAY,-7, GETDATE()) THEN 'Update daily'
    ELSE
    CASE
        WHEN MaxDate > DATEADD(DAY,-20, GETDATE()) THEN 'Update weekly'
        ELSE
        CASE
            WHEN MaxDate > DATEADD(DAY,-30, GETDATE()) THEN 'Update monthly'
            ELSE 'One time load'
            END
        END
    END AS 'UpdateFrequency'
FROM MaxDates
ORDER BY MaxDate DESC

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Code that helps identify duplicate records in the silver table:
WITH GroupId AS (
    SELECT Id, COUNT(Id) AS Count
    FROM [dwh_S].[dbo].[silver_SF_]
    GROUP BY Id
    ), 
    TopId AS (
    SELECT TOP(1) Id FROM GroupId WHERE Count>3
    )
SELECT *
FROM [dwh_].[dbo].[silver_SF_]
WHERE Id = (SELECT Id FROM TopId)
-- if there are more SystemModstamps for the same id in Novemeber (when the incremental started) it is problem
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#                                                                     DATE TIME INGESTION                                                                                                     #
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SELECT *, SYSDATETIME() AS ExtractTimestamp FROM dbo.Table

# CREATE DATE TYPE FROM TEXT:
DATEFROMPARTS(LEFT([DATE_DUE],4),SUBSTRING([DATE_DUE],5,2),RIGHT([DATE_DUE],2)) AS DATE_DUE,


